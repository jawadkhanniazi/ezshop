/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EasyShop.front_end;

import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author kaka
 */
public class afqr0 extends javax.swing.JFrame {

    private String name = "";
    private String add = "";
    private String ph = "";
    private String _loan = "";
    private String id;
    private DefaultTableModel model ;
    private TableRowSorter<DefaultTableModel> tr ;
    
    private void aqfr(){
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Loan/"+id);
        model.setRowCount(0);
        ref.addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(DataSnapshot ds, String string) {
                String name = ds.child("name").getValue().toString().toLowerCase();
                String bcd = ds.child("address").getValue().toString().toLowerCase();
                String sid = ds.child("contact").getValue().toString().toLowerCase();
                String l = ds.child("amount").getValue().toString().toLowerCase();
                Object[] row = {name, bcd,sid, l};
                model.addRow(row);
            }

            @Override
            public void onChildChanged(DataSnapshot ds, String string) {
            }

            @Override
            public void onChildRemoved(DataSnapshot ds) {
                model.setRowCount(0);
                DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Loan/"+id);
                ref.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot d) {
                        for (DataSnapshot ds : d.getChildren()) {
                            String name = ds.child("name").getValue().toString().toLowerCase();
                            String bcd = ds.child("address").getValue().toString().toLowerCase();
                            String sid = ds.child("contact").getValue().toString().toLowerCase();
                            String l = ds.child("amount").getValue().toString().toLowerCase();
                            Object[] row = {name, bcd,sid, l};
                            model.addRow(row);
                            
                        }
                    }

                    @Override
                    public void onCancelled(DatabaseError de) {
                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }
                });
            }

            @Override
            public void onChildMoved(DataSnapshot ds, String string) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void onCancelled(DatabaseError de) {
                JOptionPane.showMessageDialog(null, "Server not responding.\nTry again");
            }
        });
    }
    
    private void aqfr1(String query){
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
   
    public afqr0(String id) {
        initComponents();
        this.id = id;
        model = (DefaultTableModel) djkf12.getModel();
        tr = new TableRowSorter<DefaultTableModel>(model);
        djkf12.setRowSorter(tr);
        this.setLocationRelativeTo(this);
        this.model = (DefaultTableModel) djkf12.getModel();
        aqfr();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loan = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        dsfj23 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        djkf12 = new javax.swing.JTable();
        sfdjk2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        sjdf21 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        loan.setBackground(new java.awt.Color(255, 255, 255));

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel29.setText("Loan Information");

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel54.setText("Enter Query");

        dsfj23.setForeground(new java.awt.Color(102, 102, 102));
        dsfj23.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));
        dsfj23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dsfj23MouseClicked(evt);
            }
        });
        dsfj23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dsfj23KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dsfj23KeyReleased(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        djkf12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        djkf12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "PhNo", "Loan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        djkf12.setCellSelectionEnabled(true);
        djkf12.setGridColor(new java.awt.Color(204, 204, 204));
        djkf12.setOpaque(false);
        djkf12.setRowHeight(20);
        djkf12.getTableHeader().setReorderingAllowed(false);
        djkf12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                djkf12MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(djkf12);
        djkf12.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        sfdjk2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        sfdjk2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sfdjk2KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Amount");

        sjdf21.setText("New Loan");
        sjdf21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sjdf21MouseClicked(evt);
            }
        });

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loanLayout = new javax.swing.GroupLayout(loan);
        loan.setLayout(loanLayout);
        loanLayout.setHorizontalGroup(
            loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loanLayout.createSequentialGroup()
                .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(loanLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loanLayout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(loanLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sfdjk2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(sjdf21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(loanLayout.createSequentialGroup()
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(dsfj23, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        loanLayout.setVerticalGroup(
            loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loanLayout.createSequentialGroup()
                .addComponent(jLabel29)
                .addGap(50, 50, 50)
                .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dsfj23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loanLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loanLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(loanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sfdjk2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(sjdf21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dsfj23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dsfj23MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dsfj23MouseClicked

    private void dsfj23KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dsfj23KeyPressed
        // TODO add your handling code here:
            
    }//GEN-LAST:event_dsfj23KeyPressed

    private void dsfj23KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dsfj23KeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() != 27)
            aqfr1(dsfj23.getText().toLowerCase());
    }//GEN-LAST:event_dsfj23KeyReleased

    private void sfdjk2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfdjk2KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == 10){
            try{
                int a = Integer.parseInt(sfdjk2.getText());
                if(!sfdjk2.getText().isEmpty()){
                    if(name.isEmpty() || add.isEmpty() || ph.isEmpty() || _loan.isEmpty()){
                        JOptionPane.showMessageDialog(this, "Select a record First");
                    }else{
                        DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Loan/"+id+"/"+name+"-"+ph);
                        int ploan = Integer.parseInt(_loan.trim());
                        ref.child("amount").setValueAsync(""+(ploan+a));
                        name = "";
                        add ="";
                        ph = "";
                        _loan = "";
                        model.setValueAt(""+(ploan+a), djkf12.convertRowIndexToModel(djkf12.getSelectedRow()), 3);
                        sfdjk2.setText("");
                        dsfj23.requestFocus();
                        JOptionPane.showMessageDialog(this, "Loan updated.");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Enter Loan ammount First");
                }
            }catch(HeadlessException | NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Enter a valid Loan ammount");
            }
        }
    }//GEN-LAST:event_sfdjk2KeyPressed

    private void djkf12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_djkf12MouseClicked
        // TODO add your handling code here:
        int index = djkf12.convertRowIndexToModel(djkf12.getSelectedRow());
        name = model.getValueAt(index, 0).toString();
        add = model.getValueAt(index, 1).toString();
        ph = model.getValueAt(index, 2).toString();
        _loan = model.getValueAt(index, 3).toString();
        
        sfdjk2.setText("");
        sfdjk2.requestFocus();
    }//GEN-LAST:event_djkf12MouseClicked

    private void sjdf21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sjdf21MouseClicked
        // TODO add your handling code here:
        new qwxcero(id).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_sjdf21MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

                    if(name.isEmpty() || add.isEmpty() || ph.isEmpty() || _loan.isEmpty()){
                        JOptionPane.showMessageDialog(this, "Select a record First");
                    }else{
                        DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Loan/"+id+"/"+name+"-"+ph);
                        ref.removeValueAsync();
                    }
 
            
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable djkf12;
    private javax.swing.JTextField dsfj23;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel loan;
    private javax.swing.JTextField sfdjk2;
    private javax.swing.JButton sjdf21;
    // End of variables declaration//GEN-END:variables
}
